introduction: >
  Методология Школы 21 способна приводить к высоким образовательным результатам, только если peer-to-peer оценка производится максимально ответственно. Этот документ призван помочь тебе в этом.

  - Будь доброжелательными, вежливыми. Относись с уважением к другому человеку и проделанной им работе. Будь конструктивен, давая обратную связь.

  - Проверяя работу другого, отмечай для себя спорные и потенциально неверные моменты. Обсуди их с автором решения. Возможно, неправ ты, а не он.

  - Старайся быть открытыми к другому мнению или способу интерпретировать задание. Возможно, и твой подход, и подход другого имеют право на жизнь.
guidelines: >
  - Подлежат оцениванию только те файлы, которые учащийся или группа выложили в GIT-репозиторий.

  - В конце чек-листа есть специальные флаги: EMPTY WORK, если репозиторий пустой или решение запушено не в ветку develop, либо ветка develop отсутствует;  CHEAT, если ты уверен, что участник не сам выполнил работу (например, не может объяснить решение). Во всех этих случаях участник получит 0 баллов. В случае отсутствия плагиата, мы призываем всё равно продолжить проверку и попытаться вместе с другим учащимся выяснить проблему, приведшую к неработающему решению

  - Убедись в том, что ты не перепутал, и репозиторий является репозиторием учащегося или группы, которых ты проверяешь.

  - Если ты сам ещё не закончил работу над заданием, обязательно перечитай его ещё раз перед проверкой.
quick_actions:
  - EMPTY_WORK
  - CHEAT
language: ru
comment: ""
name: Проект 01 – Python
sections:
  - kind: "1"
    name: Main part
    description: ""
    questions:
      - name: Задание 0.1. Создание виртуального окружения
        description: >-
          - Приложен скриншот с активированным окружением
          - Окружение называется "project1"
        rating: '5'
      - name: Задание 0.2. Установка библиотек
        description: >-
          - Создан файл `requirements.txt`
          - Установлены библиотеки `numpy` и `jupyterlab` c указанием версий
        rating: '5'
      - name: Задание 1.1. Разделение на предложения
        description: >-
          - Показано не менее 2х примеров некорректного разделения текста на предложения
          - Количество предложений, полученных с помощью библиотеки `razdel` - 30255
        rating: '5'
      - name: Задание 1.2. Очистка текста
        description: >-
          - Самое длинное предложение содержит - 136
          - Общее количество предложений - 29620
        rating: '5'
      - name: Задание 1.3. Построение инвертированного индекс
        description: >-
          - Реализован метод `save_index` - показано, что индекс сохраняется в файл
          - Реализован метод `load_index` - показано, что индекс загружается из файла
          - Количество **уникальных слов** в загруженном индексе - 51639
        rating: '5'
      - name: Задание 1.4. Поиск по индексу
        description: >-
          - Результат вывода метода `query` на слове `университет` - [1013, 2387, 16480]
          - Результат вывода метода `query` на слове `школа` - []
          - Результат вывода метода `query` на словах `война` и `мир` - [0, 1, 7568, 7569, 15258, 15259, 15260, 23307]
        rating: '5'
      - name: Задание 2.1. Запрос по API
        description: >-
          - Функция `get_sudoku` возвращает 2 np.array - головоломку и решение
          - Функция `get_sudoku` позволяет выбрать сложность головоломки
        rating: '5'
      - name: Задание 2.2. Написание тестов
        description: >-
          - Написан тест, проверяющий, что в ряду нет повторяющихся чисел 
          - Написан тест, проверяющий, что в столбце нет повторяющихся чисел 
          - Написан тест, проверяющий, что каждом 3×3 блоке нет повторяющихся чисел.
        rating: '5'
      - name: Задание 2.3. Реализация алгоритма решения
        description: >-
          - Алгоритм решил головоломки всех сложностей
        rating: '5'
      - name: Задание 3.1. Формула
        description: >-
          - Написана формула TF-IDF в Markdown разметке
        rating: '5'
      - name: Задание 3.2. TF
        description: >-
          - В классе `TfidfIndex` реализован метод `_tf` 
          - Класс `TfidfIndex` от наследован от `InvertedIndex`
          - Значения TF для первого предложения - {'лев': 0.2, 'николаевич': 0.2, 'толстой': 0.2, 'война': 0.2, 'мир': 0.2}
        rating: '5'
      - name: Задание 3.3. IDF
        description: >-
          - Топ-5 слов с самым маленьким значением IDF - ['пьер', 'князь', 'наташа', 'андрей', 'княжна']
        rating: '5'
      - name: Задание 3.4. TF-IDF
        description: >-
          - Значение TD-IDF слов `война` для первого предложения ~1.2213
          - Значение TD-IDF слов `мир` для первого предложения ~1.2541
        rating: '5'